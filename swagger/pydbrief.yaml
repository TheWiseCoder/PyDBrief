openapi: 3.0.3
info:
  title: PyDBrief API
  description: |-
    A Workbench for bidirectional data migration between different RDBMS engines
  contact:
    email: gtnunes@gmail.com
  version: 1.3.0
externalDocs:
  description: Known more about PyDBrief
  url: https://github.com/TheWiseCoder/PyDBrief
servers:
  - url: http://localhost:5000
    description: Local server for RDBMS migration work
tags:
  - name: rdbms
    description: Domain related to the RDBMS engines
    externalDocs:
      description: About RDBMS engines
      url: https://en.wikipedia.org/wiki/Relational_database
  - name: data migration
    description: Data migration at various levels
    externalDocs:
      description: Learn about data migration between RDBMS engines
      url: https://en.wikipedia.org/wiki/Schema_migration
  - name: registry
    description: Operational data on the PyDBrief server
paths:
  /rdbms:
    post:
      tags:
        - rdbms
      summary: Configure the RDBMS engine
      description: Configure the RDBMS engine with the data needed for conection.
      operationId: configure-rdbms-engine
      parameters:
        - $ref: '#/components/parameters/DbEngineParam'
        - $ref: '#/components/parameters/DbNameParam'
        - $ref: '#/components/parameters/DbUserParam'
        - $ref: '#/components/parameters/DbPwdParam'
        - $ref: '#/components/parameters/DbHostParam'
        - $ref: '#/components/parameters/DbPortParam'
        - $ref: '#/components/parameters/DbClientParam'
        - $ref: '#/components/parameters/DbDriverParam'
      responses:
        '200':
          description: Configuration updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RdbmsUpdated'
        '400':
          description: Unable to update the RDBMS engine's configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RdbmsError'
  /rdbms/{rdbms}:
    get:
      tags:
        - rdbms
      summary: Retrieve the RDBMS engine configuration data
      description: Retrieve the connection parameters for the given RDBMS engine.
      operationId: get-rdbms-configuration
      parameters:
        - $ref: '#/components/parameters/RdbmsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OracleConfiguration'
        '400':
          description: No data found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RdbmsError'
  /migration:configure:
    get:
      tags:
        - data migration
      summary: Retrieve the configuration for data migration
      description: Retrieve the RDBMS-independent parameters driving the data migration.
      operationId: get-migration-configuration
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationConfiguration'
    patch:
      tags:
        - data migration
      summary: Configure the migration process
      description: Set up the RDBMS-independent parameters driving the migration process.
      operationId: configure-migration
      parameters:
        - name: batch-size
          in: query
          description: Maximum number of rows to migrate per batch (range is [1000-1000000]).
          required: false
          schema:
            type: integer
            minimum: 1000
            maximum: 1000000
            default: 200000
        - name: chunk-size
          in: query
          description: Maximum size, in bytes, of data chunks in LOB data copying (range is [1024-16777216]).
          required: false
          schema:
            type: integer
            minimum: 1024
            maximum: 16777216
            default: 1048576
        - name: max-processes
          in: query
          description: The number of processes to speed-up the migration with (range is [1-20]).
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 20
            default: 1
      responses:
        '200':
          description: Migration configured
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationUpdated'
        '400':
          description: Unable to configure the migration process
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessesError'
  /migration:verify:
    post:
      tags:
        - data migration
      summary: Verify whether a migration can be launched
      description: Verify whether the current configuration allows for a migration to be launched.
      operationId: verify-migration
      parameters:
        - $ref: '#/components/parameters/FromRdbmsParam'
        - $ref: '#/components/parameters/ToRdbmsParam'
      responses:
        '200':
          description: Migration can be launched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationSuccess'
                    
        '400':
          description: Migration cannot be launched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationFailure'
  /migrate:
    post:
      tags:
        - data migration
      summary: Migrate the data
      description:  Migrate the data from the source to the target RDBMS and schema.
      operationId: migrate-schema
      parameters:
        - $ref: '#/components/parameters/FromRdbmsParam'
        - $ref: '#/components/parameters/FromSchemaParam'
        - $ref: '#/components/parameters/ToRdbmsParam'
        - $ref: '#/components/parameters/ToSchemaParam'
        - $ref: '#/components/parameters/MigrateMetadataParam'
        - $ref: '#/components/parameters/MigratePlainParam'
        - $ref: '#/components/parameters/MigrateLobsParam'
        - $ref: '#/components/parameters/ProcessIndexesParam'
        - $ref: '#/components/parameters/ProcessViewsParam'
        - $ref: '#/components/parameters/RelaxReflectionParam'
        - $ref: '#/components/parameters/IncludeRelationsParam'
        - $ref: '#/components/parameters/ExcludeRelationsParam'
        - $ref: '#/components/parameters/ExcludeConstraintsParam'
        - $ref: '#/components/parameters/ExcludeColumnsParam'
        - $ref: '#/components/parameters/OverrideColumnsParam'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MigrationSuccess'
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaError'
  /get-log:
    get:
      tags:
        - registry
      summary: Retrieve the server's operation log
      description: Retrieve a file containing the operation log of the PyDBrief server.
      operationId: get-app-log
      parameters:
        - name: attach
          in: query
          description: Indicates, with the value '0', 'f' or 'false', that the file should be displayed by the browser. It is saved by default.
          required: false
          schema:
            type: boolean
            default: true
        - name: level
          in: query
          description: The desired log level
          required: false
          schema:
            type: string
            default: debug
            enum: [debug, info, warning, error, critical]
        - name: from-datetime
          in: query
          description: Timestamp for the start of the interval
          required: false
          schema:
            type: string
            format: YYYYMMDDhhmmss
        - name: to-datetime
          in: query
          description: Timestamp for the end of the interval
          required: false
          schema:
            type: string
            format: YYYYMMDDhhmmss
        - name: last-days
          in: query
          description: How many days to go back for the start of the interval - ignored if 'from' or 'to' are specified
          required: false
          schema:
            type: integer
        - name: last-hours
          in: query
          description: How many hours to go back for the start of the interval - ignored if 'from' or 'to' are specified
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                      example: Value '<from>' of 'from' attribute invalid
  /swagger/pydbrief.json:
    get:
      tags:
        - registry
      summary: Retrieve PyDBrief's API specifications in Swagger JSON format
      description: Retrieve the file containing the API specifications in Swagger JSON format.
      operationId: get-swagger-json
      parameters:
        - name: attach
          in: query
          description: Indicates, with the value '0', 'f' or 'false', that the file should be displayed by the browser. It is saved by default.
          required: false
          schema:
            type: string
            default: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
  /version:
    get:
      tags:
        - registry
      summary: Retrieve the current versions of PyDBrief and accompanying PyPomes modules
      description: Retrieve the version of PyDBrief and accompanying PyPomes modules currently running.
      operationId: get-version
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  PyDBrief:
                    type: string
                    example: 1.2.2
                  PyPomes-Core:
                    type: string
                    example: 1.3.2
                  PyPomes-DB:
                    type: string
                    example: 1.2.3
                  PyPomes-HTTP:
                    type: string
                    example: 0.2.3
                  PyPomes-Logging:
                    type: string
                    example: 0.2.0
                  PyPomes-Security:
                    type: string
                    example: 0.1.4
components:
  parameters:
    DbEngineParam:
      name: db-engine
      in: query
      description: The RDBMS engine to configure
      required: true
      schema:
        type: string
        enum: [mysql, oracle, postgres, sqlserver]
    DbNameParam:
      name: db-name
      in: query
      description: The database identification
      required: true
      schema:
        type: string
    DbUserParam:
      name: db-user
      in: query
      description: Logon user
      required: true
      schema:
        type: string
    DbPwdParam:
      name: db-pwd
      in: query
      description: Logon password
      required: true
      schema:
        type: string
    DbHostParam:
      name: db-host
      in: query
      description: Host access URL
      required: true
      schema:
        type: string
    DbPortParam:
      name: db-port
      in: query
      description: Host access port
      required: true
      schema:
        type: integer
    DbClientParam:
      name: db-client
      in: query
      description: Client software installed in local workstation (Oracle, only)
      required: false
      schema:
        type: string
    DbDriverParam:
      name: db-driver
      in: query
      description: Database access driver (SQLServer, only)
      required: false
      schema:
        type: string
    FromRdbmsParam:
      name: from-rdbms
      in: query
      description: The RBMS to migrate from
      required: true
      schema:
        type: string
        enum: [mysql, oracle, postgres, sqlserver]
        example: oracle
    ToRdbmsParam:
      name: to-rdbms
      in: query
      description: The RBMS to migrate to
      required: true
      schema:
        type: string
        enum: [mysql, oracle, postgres, sqlserver]
        example: postgres
    FromSchemaParam:
      name: from-schema
      in: query
      description: The schema to migrate from
      required: true
      schema:
        type: string
    ToSchemaParam:
      name: to-schema
      in: query
      description: The schema to migrate to
      required: true
      schema:
        type: string
    RdbmsParam:
      name: rdbms
      in: path
      description: The reference RDBMS engine
      required: true
      schema:
        type: string
        enum: [mysql, oracle, postgres, sqlserver]
    MigrateMetadataParam:
      name: migrate-metadata
      in: query
      description: Whether metadata should be migrated. This will create or transform the destination schema. If false, parameters 'process_indexes', 'process-views', and 'exclude-constraints' are ignored.
      required: true
      schema:
        type: boolean
        default: true
    MigratePlainParam:
      name: migrate-plaindata
      in: query
      description: Whether plain data should be migrated. This assumes that metadata is being migrated, or all affected tables exist in destination schema and are empty.
      required: true
      schema:
        type: boolean
        default: true
    MigrateLobsParam:
      name: migrate-lobdata
      in: query
      description: Whether LOB data should be migrated. This assumes that plain data are being, or have already been, migrated.
      required: true
      schema:
        type: boolean
        default: true
    ProcessIndexesParam:
      name: process-indexes
      in: query
      description: Whether indexes should be migrated. Defaults to false. Ignored if metadata is not being migrated.
      required: false
      schema:
        type: boolean
        default: false
    ProcessViewsParam:
      name: process-views
      in: query
      description: Whether views should be migrated. Defaults to false. Ignored if metadata is not being migrated.
      required: false
      schema:
        type: boolean
        default: false
    RelaxReflectionParam:
      name: relax-reflection
      in: query
      description: Relaxes requirement that referenced tables must be found during the schema reflection phase. Will not automatically prevent a referenced table not found error in the subsequent schema migration phase, but additional useful information is likely to be provided.
      required: false
      schema:
        type: boolean
        default: false
    IncludeRelationsParam:
      name: include-relations
      in: query
      description: Relations (tables, views, and indexes) to migrate (mutually exclusive with 'exclude-relations'). Ignored for views and indexes, if 'process-views' and 'process-indexes' were not defined, respectively.
      required: false
      explode: false
      schema:
        type: array
        items:
          type: string
    ExcludeRelationsParam:
      name: exclude-relations
      in: query
      description: Relations (tables, views, and indexes) not to migrate (mutually exclusive with 'include-relations'). Irrelevant for views and indexes, if 'process-views' and 'process-indexes' were not defined, respectively.
      required: false
      explode: false
      schema:
        type: array
        items:
          type: string
    ExcludeColumnsParam:
      name: exclude-columns
      in: query
      description: Table columns not to migrate. Column names must be table-qualified (<table-name>.<column-name>).
      required: false
      explode: false
      schema:
        type: array
        items:
          type: string
    ExcludeConstraintsParam:
      name: exclude-constraints
      in: query
      description: Constraints not to migrate. Ignored if metadata is not being migrated.
      required: false
      explode: false
      schema:
        type: array
        items:
          type: string
    OverrideColumnsParam:
      name: override-columns
      in: query
      description: Optional list of table columns with types to be forced upon. These types override the standard type conversion. Useful for referenced but unreacheable columns, such as FK columns pointing to absent tables. Column names must be table-qualified (<table-name>.<column-name>=<type-name>). Types must be valid in target RDBMS.
      required: false
      explode: false
      schema:
        type: array
        items:
          type: string
          example: my_table.my_column=integer
  schemas:
    MigrationConfiguration:
      type: object
      properties:
        batch-size:
          type: integer
          example: 200000
        chunk-size:
          type: integer
          example: 1024000
        max-processes:
          type: integer
          example: 10
#        temp-folder:
#          type: string
#          exampl: C:\temp
    OracleConfiguration:
      type: object
      properties:
        rdbms:
          type: string
          example: oracle
        name:
          type: string
          example: MyOracle
        user:
          type: string
          example: admin
        pwd:
          type: string
          example: admin
        host:
          type: string
          example: https://my-oracle.com
        port:
          type: integer
          example: 1521
        client:
          type: string
          example: C:\oracle\instantclient_21_6
    PostgresConfiguration:
      type: object
      properties:
        rdbms:
          type: string
          example: postgres
        name:
          type: string
          example: MyPostgres
        user:
          type: string
          example: admin
        password:
          type: string
          example: admin
        host:
          type: string
          example: https://my-postgres.com
        port:
          type: integer
          example: 5432
    ConfigurationUpdated:
      type: object
      properties:
        status:
          type: string
          example: Configuration updated
    RdbmsUpdated:
      type: object
      properties:
        status:
          type: string
          example: Rdbms 'oracle' configuration updated
    VerificationSuccess:
      type: object
      properties:
        status:
          type: string
          example: Migration can be launched
        configuration:
          $ref: '#/components/schemas/MigrationConfiguration'
        from:
          $ref: '#/components/schemas/OracleConfiguration'
        to:
          $ref: '#/components/schemas/PostgresConfiguration'
    VerificationFailure:
      type: object
      properties:
        status:
          type: string
          example: Migration cannot be launched
        errors:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                example: Value 'oracle' cannot be assigned for attributes 'from-rdbms' and 'to-rdbms' at the same time
    MigrationSuccess:
      type: object
      properties:
        started:
          type: string
          example: 2024-05-06 23:51:42
        finished:
          type: string
          example: 2024-05-06 23:51:46
        steps:
          type: array
          items:
            type: string
          example:
            - migrate-metadata
            - migrate-plaindata
        source:
          type: object
          properties:
            rdbms:
              type: string
              example: oracle
            client:
              type: string
              example: /usr/lib/instantclient
            name:
              type: string
              example: XE
            host:
              type: string
              example: localhost
            port:
              type: integer
              example: 1521
            schema:
              type: string
              example: ora-schema
            user:
              type: string
              example: system
        target:
          type: object
          properties:
            rdbms:
              type: string
              example: postgres
            name:
              type: string
              example: postgres
            host:
              type: string
              example: localhost
            port:
              type: integer
              example: 5432
            schema:
              type: string
              example: pg-schema
            user:
              type: string
              example: postgres
        migrated-tables:
          type: object
          properties:
            my-table:
              type: object
              properties:
                plain-count:
                  type: integer
                  example: 1250000
                plain-status:
                  type: string
                  example: "full"
                lob-count:
                  type: integer
                  example: 2500000
                lob-status:
                  type: string
                  example: "full"
                my-column-1:
                  type: object
                  properties:
                    source-type:
                      type: string
                      example: NUMBER(7,0)
                    target-type:
                      type: string
                      example: INTEGER
                    features:
                      type: array
                      items:
                        type: string
                      example:
                        - identity
                        - primary-key
                my-column-2:
                  type: object
                  properties:
                    source-type:
                      type: string
                      example: NUMBER(9,2)
                    target-type:
                      type: string
                      example: FLOAT
        total-plains:
          type: integer
          example: 1570970
        total-lobs:
          type: integer
          example: 5890575
        total-tables:
          type: integer
          example: 15
        version:
          type: string
          example: 1.3.0
    SchemaError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              attribute:
                type: string
                example: from-schema
              description:
                type: string
                example: Invalid value 'my-schema'
    TablesError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              attribute:
                type: string
                example: tables
              description:
                type: string
                example: Invalid value 'my-table'
    RdbmsError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              attribute:
                type: string
                example: db-name
              description:
                type: string
                example: Invalid value 'my-database'
    ProcessesError:
      type: object
      properties:
        errors:
          type: array
          items:
            type: object
            properties:
              attribute:
                type: string
                example: max-processes
              description:
                type: string
                example: Invalid value '0'